stages:
  - test
  - build
  - release

eslint:
  image: node:14.0.0
  stage: test
  tags:
    - docker
  script:
    - yarn install --quiet
    - yarn run lint

flow:
  image: node:14.0.0
  stage: test
  tags:
    - docker
  script:
    - yarn install --quiet
    - yarn run flow

jest:
  image: node:14.0.0
  stage: test
  tags:
    - docker
  script:
    - echo "module.exports = {localStorageKey:'tellduslive'}" > config.local.js
    - yarn install --quiet
    - yarn test

android: &android
  image: telldus/react-native-android:29-alpine
  stage: build
  variables:
    DEPLOY_STORE: ${CI_JOB_NAME}
  cache:
    paths:
      - node_modules
      - android/gradle
  artifacts:
    paths:
      - android/app/build/outputs/bundle/release/app-release.aab
      - android/app/build/outputs/apk/release/app-release.apk
      - android/android_sourcemap.js
      - android/huawei_sourcemap.js
      - android/universal.apks
    expire_in: '1 mos'
  script:
    - $TMPDIR/react-native-packager-cache-* && rm -rf $TMPDIR/metro-bundler-cache-*
    - yarn install --quiet
    - yarn run manage:translations-widget-android
    - cd android
    - ./buildGitlabRunner.sh
  only:
    - tags
    - master
    - /^v\d+\.\d+.*$/ # Version branches
  tags:
    - android

huawei:
  <<: *android

ios:
  stage: build
  tags:
    - macos
    - xcode-11.2
  cache:
    paths:
      - node_modules
  artifacts:
    paths:
      - ios/main.jsbundle.map
      - TelldusLiveApp.ipa
      - TelldusLiveApp.app.dSYM.zip
    expire_in: '1 mos'
  only:
    - tags
    - master
    - /^v\d+\.\d+.*$/ # Version branches
  script:
    - $TMPDIR/react-native-packager-cache-* && rm -rf $TMPDIR/metro-bundler-cache-*
    - yarn install --quiet
    - cd ios
    - ./buildGitlabRunner.sh

google_play:
  image: ruby:2
  stage: release
  tags:
    - docker
  dependencies:
    - android
  environment:
    name: google_play
    url: https://play.google.com/store/apps/details?id=com.telldus.live.mobile.test
  only:
    - tags
  script:
    - echo ${GOOGLE_KEY} > play_key.json
    - bundle install
    - fastlane android alpha --verbose

huawei_app_gallery:
  image: ruby:2
  stage: release
  variables:
    DEPLOY_STORE: huawei
  tags:
    - docker
  dependencies:
    - huawei
  environment:
    name: huawei_app_gallery
    url: https://huaweimobileservices.com/appgallery/
  only:
    - tags
  script:
    - apt-get update && apt-get install -y locales >/dev/null
    - echo "en_US UTF-8" > /etc/locale.gen
    - locale-gen en_US.UTF-8
    - export LANG=en_US.UTF-8
    - export LANGUAGE=en_US:en
    - export LC_ALL=en_US.UTF-8
    - bundle install
    - bundle exec fastlane android huawei --verbose

testflight: &testflight
  stage: release
  tags:
    - macos
  dependencies:
    - ios
  environment:
    name: appstore
    url: https://itunes.apple.com/us/app/telldus-live-mobile-beta/id1014419677
  only:
    - tags
  script:
    - fastlane ios beta --verbose
    - yarn install --quiet
    - cd ios && pod install && pod update && cd ..
    - fastlane ios refresh_dsyms --verbose

testflight (master):
  <<: *testflight
  when: manual
  only:
    - master

s3:
  image: cgswong/aws:latest
  stage: release
  dependencies:
    - ios
    - android
    - huawei
  environment:
    name: s3
    url: https://download.telldus.com/app
  only:
    - tags
  script:
    - echo "${S3CFG}" > ~/.s3cfg
    - s3cmd put android/android_sourcemap.js android/app/build/outputs/bundle/release/app-* android/universal.apks s3://download.telldus.com/app/${CI_COMMIT_TAG}/telldus-app-v3_android_${CI_COMMIT_TAG}/
    - s3cmd put android/huawei_sourcemap.js android/app/build/outputs/apk/release/app-* s3://download.telldus.com/app/${CI_COMMIT_TAG}/telldus-app-v3_huawei_${CI_COMMIT_TAG}/
    - s3cmd put ios/main.jsbundle.map TelldusLiveApp.ipa s3://download.telldus.com/app/${CI_COMMIT_TAG}/telldus-app-v3_ios_${CI_COMMIT_TAG}/
