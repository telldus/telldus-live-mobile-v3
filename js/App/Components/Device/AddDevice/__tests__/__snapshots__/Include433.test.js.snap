// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Include433 /> Should initiateAdd433MHz and show activity indicator 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

exports[`<Include433 /> on error with container component Should initiateAdd433MHz and show error screen with container, also call deleteSocketAndTimer when unmount 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eeeeee",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#1b365d",
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "paddingHorizontal": 15,
              "paddingTop": 0,
              "position": "relative",
            },
            Object {
              "height": 106.72,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": "telldus_logo",
              }
            }
            style={
              Array [
                Object {
                  "height": 35.00000025,
                  "resizeMode": "contain",
                  "width": 230.49999975,
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
              "height": 15.5,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            fill="#e26901"
            height={313}
            style={
              Object {
                "marginTop": -2,
              }
            }
            width={750}
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-end",
                    "backgroundColor": "transparent",
                    "flex": 0,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "marginRight": 12.4,
                    "width": 80,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 2,
            "elevation": 2,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 1.38885,
            "padding": 2.7777,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.23,
            "shadowRadius": 2,
          },
          Array [
            Object {
              "flex": 0,
              "marginBottom": 1.38885,
              "marginHorizontal": 2.7777,
            },
            Object {
              "marginVertical": 2.7777,
            },
          ],
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#1b365d",
              "justifyContent": "center",
            },
            Object {
              "backgroundColor": "transparent",
            },
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          importantForAccessibility="yes"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#e26901",
                "fontFamily": "telldusicons",
                "fontSize": 14.000000000000002,
              },
              Object {
                "color": "#D32F2E",
              },
            ]
          }
        >
          info
        </Text>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
            "flexDirection": "row",
            "flexWrap": "wrap",
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#555555",
                "flex": 1,
                "flexWrap": "wrap",
                "fontSize": 4.2,
                "marginLeft": 2.7777,
              },
              Object {
                "fontSize": 3.5000000000000004,
              },
            ]
          }
        >
          Error when add device 433MHz failed
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Include433 /> on success with container component Should initiateAdd433MHz and show success screen with container, also call deleteSocketAndTimer when unmount 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eeeeee",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#1b365d",
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "paddingHorizontal": 15,
              "paddingTop": 0,
              "position": "relative",
            },
            Object {
              "height": 106.72,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": "telldus_logo",
              }
            }
            style={
              Array [
                Object {
                  "height": 35.00000025,
                  "resizeMode": "contain",
                  "width": 230.49999975,
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
              "height": 15.5,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            fill="#e26901"
            height={313}
            style={
              Object {
                "marginTop": -2,
              }
            }
            width={750}
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-end",
                    "backgroundColor": "transparent",
                    "flex": 0,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "marginRight": 12.4,
                    "width": 80,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          Object {
            "flexGrow": 1,
            "paddingVertical": 2.7777,
          }
        }
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderRadius": 2,
                  "elevation": 2,
                  "marginBottom": 10.416375,
                  "marginHorizontal": 20.83275,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2,
                  "width": 708.3345,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "stretch",
                    "backgroundColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "backgroundColor": "transparent",
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "paddingVertical": 72,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderRightColor": "transparent",
                      "borderRightWidth": 37.5,
                      "borderStyle": "solid",
                      "borderTopColor": "#1b365d",
                      "borderTopLeftRadius": 2,
                      "borderTopWidth": 120,
                      "height": 0,
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": 150,
                    }
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#fff",
                      "fontSize": 37.5,
                      "left": 45,
                      "position": "absolute",
                      "top": 7.5,
                    }
                  }
                >
                  1.
                </Text>
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "height": 0,
                      "width": 0,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "flex-start",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                    "paddingHorizontal": 20.83275,
                    "paddingVertical": 41.6655,
                    "width": 555,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#8e8e93",
                      "flexWrap": "wrap",
                      "fontSize": 26.250000000000004,
                    }
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#8e8e93",
                    "fontSize": 3,
                    "marginBottom": 4,
                  }
                }
              >
                (0% )
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#cccccc",
                      "borderColor": "transparent",
                      "borderRadius": 4,
                      "borderWidth": 0,
                      "justifyContent": "center",
                      "overflow": "hidden",
                      "width": 88.8892,
                    },
                    Object {
                      "marginBottom": 2.7777,
                    },
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#e26901",
                      "height": 4,
                      "transform": Array [
                        Object {
                          "translateX": -3.552713678800501e-15,
                        },
                        Object {
                          "translateX": -44.44015554,
                        },
                        Object {
                          "scaleX": 0.0001,
                        },
                      ],
                      "width": 88.8892,
                    }
                  }
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderRadius": 2,
                  "elevation": 2,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 1.38885,
                  "padding": 2.7777,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.23,
                  "shadowRadius": 2,
                },
                Object {
                  "flex": 0,
                  "marginBottom": 1.38885,
                  "marginHorizontal": 2.7777,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#1b365d",
                    "justifyContent": "center",
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                importantForAccessibility="yes"
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#e26901",
                      "fontFamily": "telldusicons",
                      "fontSize": 14.000000000000002,
                    },
                    undefined,
                  ]
                }
              >
                info
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "flex": 1,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#555555",
                      "flex": 1,
                      "flexWrap": "wrap",
                      "fontSize": 4.2,
                      "marginLeft": 2.7777,
                    },
                    Object {
                      "fontSize": 3.5000000000000004,
                    },
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`<Include433 /> with container component Should initiateAdd433MHz and show activity indicator with container 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#eeeeee",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 0,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#1b365d",
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "paddingHorizontal": 15,
              "paddingTop": 0,
              "position": "relative",
            },
            Object {
              "height": 106.72,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": "telldus_logo",
              }
            }
            style={
              Array [
                Object {
                  "height": 35.00000025,
                  "resizeMode": "contain",
                  "width": 230.49999975,
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
              "height": 15.5,
              "overflow": "hidden",
              "width": "100%",
            }
          }
        >
          <View
            fill="#e26901"
            height={313}
            style={
              Object {
                "marginTop": -2,
              }
            }
            width={750}
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-end",
                    "backgroundColor": "transparent",
                    "flex": 0,
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "marginRight": 12.4,
                    "width": 80,
                  },
                  undefined,
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="large"
      />
    </View>
  </View>
</View>
`;
