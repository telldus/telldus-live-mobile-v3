// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NavigationHeader /> - snapshot renders TouchableButton when disabled 1`] = `
<View
  accessibilityLabel="TouchableButton button, Double tap to activate"
  accessible={true}
  focusable={true}
  importantForAccessibility="yes"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#b5b5b5",
      "borderRadius": 44,
      "elevation": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "maxWidth": 675,
      "minWidth": 375,
      "opacity": 1,
      "paddingHorizontal": 22,
      "paddingVertical": 22,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 1,
        "width": 0,
      },
      "shadowOpacity": 0.5,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      importantForAccessibility="yes"
      style={
        Array [
          Object {
            "color": "#f5f5f5",
            "fontSize": 26,
            "textAlign": "center",
            "textAlignVertical": "center",
          },
          undefined,
        ]
      }
    >
      TOUCHABLEBUTTON
    </Text>
  </View>
</View>
`;

exports[`<NavigationHeader /> - snapshot renders TouchableButton when disabled and loading 1`] = `
<View
  accessibilityLabel="TouchableButton button, Double tap to activate"
  accessible={true}
  focusable={true}
  importantForAccessibility="yes"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#b5b5b5",
      "borderRadius": 44,
      "elevation": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "maxWidth": 675,
      "minWidth": 375,
      "opacity": 1,
      "paddingHorizontal": 22,
      "paddingVertical": 22,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 1,
        "width": 0,
      },
      "shadowOpacity": 0.5,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      importantForAccessibility="yes"
      style={
        Array [
          Object {
            "color": "#f5f5f5",
            "fontSize": 26,
            "textAlign": "center",
            "textAlignVertical": "center",
          },
          undefined,
        ]
      }
    >
      TOUCHABLEBUTTON
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "position": "absolute",
          },
          Array [
            Object {
              "marginLeft": 10,
              "position": "relative",
            },
            undefined,
          ],
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        importantForAccessibility="yes"
        style={
          Array [
            Object {
              "color": "#999",
              "fontSize": 30,
            },
            Object {
              "color": "#ffffff",
              "fontSize": 26,
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "fontFamily": "telldusicons",
            },
          ]
        }
      >
        loading
      </Text>
    </View>
  </View>
</View>
`;

exports[`<NavigationHeader /> - snapshot renders TouchableButton when enabled 1`] = `
<View
  accessibilityLabel="TouchableButton button, Double tap to activate"
  accessible={true}
  focusable={true}
  importantForAccessibility="yes"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#e26901",
      "borderRadius": 44,
      "elevation": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "maxWidth": 675,
      "minWidth": 375,
      "opacity": 1,
      "paddingHorizontal": 22,
      "paddingVertical": 22,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 1,
        "width": 0,
      },
      "shadowOpacity": 0.3,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      importantForAccessibility="yes"
      style={
        Array [
          Object {
            "color": "#ffffff",
            "fontSize": 26,
            "textAlign": "center",
            "textAlignVertical": "center",
          },
          undefined,
        ]
      }
    >
      TOUCHABLEBUTTON
    </Text>
  </View>
</View>
`;

exports[`<NavigationHeader /> - snapshot renders TouchableButton when enabled and loading 1`] = `
<View
  accessibilityLabel="TouchableButton button, Double tap to activate"
  accessible={true}
  focusable={true}
  importantForAccessibility="yes"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#e26901",
      "borderRadius": 44,
      "elevation": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "maxWidth": 675,
      "minWidth": 375,
      "opacity": 1,
      "paddingHorizontal": 22,
      "paddingVertical": 22,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 1,
        "width": 0,
      },
      "shadowOpacity": 0.3,
      "shadowRadius": 2,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      importantForAccessibility="yes"
      style={
        Array [
          Object {
            "color": "#ffffff",
            "fontSize": 26,
            "textAlign": "center",
            "textAlignVertical": "center",
          },
          undefined,
        ]
      }
    >
      TOUCHABLEBUTTON
    </Text>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "position": "absolute",
          },
          Array [
            Object {
              "marginLeft": 10,
              "position": "relative",
            },
            undefined,
          ],
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        importantForAccessibility="yes"
        style={
          Array [
            Object {
              "color": "#999",
              "fontSize": 30,
            },
            Object {
              "color": "#ffffff",
              "fontSize": 26,
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            },
            Object {
              "fontFamily": "telldusicons",
            },
          ]
        }
      >
        loading
      </Text>
    </View>
  </View>
</View>
`;
